@define rails3-tags "`general-tags`, `rails3-more-tags`"
@define rails3-program "`program``rails3-suffix-program`"

parser p_rails3_csv {
  csv-parser(columns("RAILS.START", "RAILS.HTTP_VERB", "RAILS.REQUEST_URL",
        "RAILS.FOR", "RAILS.IP", "RAILS.AT", "RAILS.DATE", "RAILS.TIMESTAMP", "RAILS.TIMEZONE")
      flags(escape-none,strip-whitespace)
      delimiters(" \r\n")
  );
  # in rails logs status code is writed as : Completed 200 OK in 199.1ms (Views: 142.9ms | ActiveRecord: 48.4ms)
  #                                     or : Completed 500 Internal Server Error in 25.2ms (Views: 24.0ms | ActiveRecord: 11.7ms)
  csv-parser(columns("RAILS.HEADER", "RAILS.RESPONSE")
    flags(escape-none,strip-whitespace)
    delimiters(chars(""),strings("Completed"))
  );
};

parser p_rails3_request_status {
  csv-parser(columns("RAILS.STATUS", "RAILS.RESPONSE_ALL_TIMES")
    delimiters(chars(""), strings("in","Rendered"))
    flags(escape-none,strip-whitespace)
    template("${RAILS.RESPONSE}")
  );
};

parser p_rails3_timestamp {
  # in rails log dates are like : 2022-02-01 10:56:23 +0000
  date-parser(format("%Y-%m-%d %H:%M:%S %z") template("${RAILS.DATE} ${RAILS.TIMESTAMP} ${RAILS.TIMEZONE}"));
};

parser p_rails3 {
  channel {
    parser(p_rails3_csv);
    parser(p_rails3_request_status);

    rewrite { set("${RAILS.STATUS}", value("RAILS.STATUS_CODE")); };
    rewrite { set("${RAILS.STATUS}", value("RAILS.STATUS_TEXT")); };
    rewrite { subst('(\d+)\s.*', "$1", value("RAILS.STATUS_CODE")); };
    rewrite { subst('\d+\s(.*)$', "$1", value("RAILS.STATUS_TEXT")); };

    rewrite { set("${RAILS.RESPONSE_ALL_TIMES}", value("RAILS.RESPONSE_TIME")); };
    rewrite { subst('^(\d+\.\d+ms).*', "$1", value("RAILS.RESPONSE_TIME")); };

    parser(p_rails_parameters);
    if {
      filter{match('Views:' value("RAILS.RESPONSE_ALL_TIMES"));};
      rewrite { set("${RAILS.RESPONSE_ALL_TIMES}", value("RAILS.VIEW_RESPONSE_TIME")); };
      rewrite { subst('.*Views:\s(\d+\.\d+ms).*', "$1", value("RAILS.VIEW_RESPONSE_TIME")); };
    };
    if {
      filter { match('ActiveRecord:' value("RAILS.RESPONSE_ALL_TIMES")); };
      rewrite { set("${RAILS.RESPONSE_ALL_TIMES}", value("RAILS.DB_RESPONSE_TIME")); };
      rewrite { subst('.*ActiveRecord:\s(\d+\.\d+ms).*', "$1", value("RAILS.DB_RESPONSE_TIME")); };
    };
    parser(p_rails3_timestamp);
  };
};
