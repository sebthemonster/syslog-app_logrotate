@define rails2-tags "`general-tags`, `rails2-more-tags`"
@define rails2-program "`program``rails2-suffix-program`"

parser p_rails2_csv {
  csv-parser(columns("RAILS.START", "RAILS.CONTROLLER", "RAILS.FOR",
        "RAILS.IP", "RAILS.AT", "RAILS.DATE", "RAILS.TIMESTAMP", "RAILS.HTTP_VERB")
      flags(escape-none,strip-whitespace)
      delimiters(" \r\n")
  );
  # in rails logs status code and response time is writed as : Completed in 41ms (View: 23, DB: 7) | 200 OK [<< url >>]
  csv-parser(columns("RAILS.HEADER", "RAILS.RESPONSE_ALL_TIMES", "RAILS.RESPONSE")
    flags(escape-none,strip-whitespace)
    delimiters(chars(""),strings("Completed","|"))
  );
};

parser p_rails2_timestamp {
  # in rails log dates are like : 2022-02-01 10:56:23
  date-parser(format("%Y-%m-%d %H:%M:%S %z") template("${RAILS.DATE} ${RAILS.TIMESTAMP} +0000"));
};

parser p_rails2_request_status {
  # in rails logs status code is writed as : 200 OK [<< url >>]
  csv-parser(columns("RAILS.STATUS_CODE", "RAILS.STATUS_TEXT", "RAILS.REQUEST_URL")
    delimiters(" ")
    flags(escape-none,strip-whitespace)
    template("${RAILS.RESPONSE}")
  );
};

parser p_rails2_request_times {
  # in rails logs response times are writed as : Completed in 41ms (View: 23, DB: 7)
  csv-parser(columns("RAILS.IN", "RAILS.RESPONSE_TIME", "RAILS.RESPONSE_PARTIAL_TIMES")
    delimiters(chars("()"), strings("in"))
    flags(escape-none,strip-whitespace)
    template("${RAILS.RESPONSE_ALL_TIMES}")
  );
};

parser p_rails2 {
  channel {
    parser(p_rails2_csv);
    parser(p_rails2_request_status);
    rewrite { subst('\[(.*)\]', "$1", value("RAILS.REQUEST_URL")); };
    parser(p_rails_parameters);
    parser(p_rails2_request_times);
    if {
      filter{message('View:');};
      rewrite { set("${RAILS.RESPONSE_PARTIAL_TIMES}", value("RAILS.VIEW_RESPONSE_TIME")); };
      rewrite { subst('View:\s(\d+).*', "$1", value("RAILS.VIEW_RESPONSE_TIME")); };
    };
    if {
      filter { message('DB:'); };
      rewrite { set("${RAILS.RESPONSE_PARTIAL_TIMES}", value("RAILS.DB_RESPONSE_TIME")); };
      rewrite { subst('.*DB:\s(\d+).*', "$1", value("RAILS.DB_RESPONSE_TIME")); };
    };
    rewrite { subst('\)$', '', value("RAILS.TIMESTAMP")); };
    parser(p_rails2_timestamp);
  };
};
